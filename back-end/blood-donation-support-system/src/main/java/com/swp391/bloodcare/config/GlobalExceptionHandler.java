package com.swp391.bloodcare.config;

import io.jsonwebtoken.ExpiredJwtException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import java.util.Map;

@RestControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(Exception.class)
    public ResponseEntity<String> handleAllExceptions(Exception ex) {
        // In ra console
        ex.printStackTrace(); // B·∫ÆT BU·ªòC ƒë·ªÉ th·∫•y l·ªói g·ªëc trong console
        return new ResponseEntity<>("L·ªói h·ªá th·ªëng: " + ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
    }

    @ExceptionHandler(UsernameNotFoundException.class)
    public ResponseEntity<String> handleUserNotFound(UsernameNotFoundException ex) {
        System.out.println("‚ùå Username kh√¥ng t·ªìn t·∫°i: " + ex.getMessage());
        return new ResponseEntity<>("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng", HttpStatus.NOT_FOUND);
    }

    @ExceptionHandler({ExpiredJwtException.class})
    public ResponseEntity<?> handleJwtExpired(ExpiredJwtException ex) {
        return ResponseEntity.status(HttpStatus.UNAUTHORIZED)
                .body(Map.of("error", "Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n, vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i"));
    }

    @ExceptionHandler(AccessDeniedException.class)
    public ResponseEntity<String> handleAccessDenied(AccessDeniedException ex) {
        System.out.println("üö´ Truy c·∫≠p b·ªã t·ª´ ch·ªëi: " + ex.getMessage());
        return new ResponseEntity<>("B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p", HttpStatus.FORBIDDEN);
    }

}
