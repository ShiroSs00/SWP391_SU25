import React from 'react';
import { useNavigate } from 'react-router-dom';
import Hero from "../components/sections/hero.tsx";
import WrapperSection from "../components/sections/wrapperSection.tsx";
import GroupedHeading from "../components/sections/GroupedHeading.tsx";
import TwoCta from "../components/sections/twoCta.tsx";
import ThreeStepProcess from "../components/sections/threeStepProcess.tsx";
// import SearchBloodStock from "../components/sections/searchBloodStock.tsx";
import ContactDetails from "../components/sections/contactDetails.tsx";


const Home: React.FC = () => {
    const navigate = useNavigate();

    // Simple data for homepage
    const heroData = {
        title: "K·∫øt N·ªëi S·ª± S·ªëng Qua Hi·∫øn M√°u",
        subtitle: "Tham gia m·∫°ng l∆∞·ªõi hi·∫øn m√°u t·∫°i TP.HCM. M·ªói gi·ªçt m√°u c·ªßa b·∫°n l√† m·ªôt c∆° h·ªôi c·ª©u s·ªëng.",
        primaryButtonText: "ƒêƒÉng k√Ω hi·∫øn m√°u",
        secondaryButtonText: "T√¨m hi·ªÉu th√™m",
        backgroundImage: "/images/hero-blood-donation.jpg"
    };

    const statsData = [
        { label: "Ng∆∞·ªùi hi·∫øn m√°u", value: "25,847", icon: "üë•" },
        { label: "ƒê∆°n v·ªã m√°u ƒë√£ thu", value: "89,234", icon: "ü©∏" },
        { label: "B·ªánh nh√¢n ƒë∆∞·ª£c c·ª©u", value: "156,789", icon: "üíö" },
        { label: "B·ªánh vi·ªán li√™n k·∫øt", value: "47", icon: "üè•" }
    ];

    const processSteps = [
        {
            step: 1,
            title: "ƒêƒÉng k√Ω",
            description: "ƒêi·ªÅn th√¥ng tin v√† ƒë·∫∑t l·ªãch hi·∫øn m√°u ph√π h·ª£p"
        },
        {
            step: 2,
            title: "Kh√°m s√†ng l·ªçc",
            description: "Ki·ªÉm tra s·ª©c kh·ªèe v√† x√©t nghi·ªám m√°u c∆° b·∫£n"
        },
        {
            step: 3,
            title: "Hi·∫øn m√°u",
            description: "Qu√° tr√¨nh hi·∫øn m√°u an to√†n trong 10-15 ph√∫t"
        }
    ];

    const urgentBloodTypes = [
        { type: "O-", stock: "Th·∫•p", urgency: "C·ª±c k·ª≥ c·∫ßn", color: "bg-red-500" },
        { type: "AB-", stock: "R·∫•t th·∫•p", urgency: "C·∫ßn g·∫•p", color: "bg-orange-500" },
        { type: "A-", stock: "Th·∫•p", urgency: "C·∫ßn thi·∫øt", color: "bg-yellow-500" }
    ];

    const handlePrimaryAction = () => {
        navigate('/donate-blood');
    };

    const handleSecondaryAction = () => {
        navigate('/blood-types');
    };

    const handleNeedBlood = () => {
        navigate('/need-blood');
    };

    return (
        <div className="min-h-screen bg-gray-50">

            {/* Hero Section */}
            <Hero
                title={heroData.title}
                subtitle={heroData.subtitle}
                primaryButtonText={heroData.primaryButtonText}
                secondaryButtonText={heroData.secondaryButtonText}
                onPrimaryClick={handlePrimaryAction}
                onSecondaryClick={handleSecondaryAction}
                backgroundImage={heroData.backgroundImage}
            />

            {/* Stats Section */}
            <WrapperSection className="py-16 bg-white">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <GroupedHeading
                        title="T√°c ƒë·ªông c·ªßa ch√∫ng ta"
                        description="Nh·ªØng con s·ªë √Ω nghƒ©a t·ª´ c·ªông ƒë·ªìng hi·∫øn m√°u"
                    />

                    <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-12">
                        {statsData.map((stat, index) => (
                            <div key={index} className="text-center">
                                <div className="text-4xl mb-2">{stat.icon}</div>
                                <div className="text-3xl font-bold text-gray-900">{stat.value}</div>
                                <div className="text-gray-600">{stat.label}</div>
                            </div>
                        ))}
                    </div>
                </div>
            </WrapperSection>

            {/* Urgent Blood Need Alert */}
            <WrapperSection className="py-12 bg-red-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="bg-red-100 border border-red-200 rounded-lg p-6">
                        <div className="flex items-center">
                            <div className="text-red-600 text-xl mr-3">üö®</div>
                            <div>
                                <h3 className="text-lg font-semibold text-red-800">
                                    C·∫ßn g·∫•p c√°c nh√≥m m√°u hi·∫øm
                                </h3>
                                <p className="text-red-700">
                                    C√°c nh√≥m m√°u O-, AB-, A- ƒëang ·ªü m·ª©c t·ªìn kho th·∫•p
                                </p>
                            </div>
                            <button
                                onClick={handlePrimaryAction}
                                className="ml-auto bg-red-600 text-white px-6 py-2 rounded-lg hover:bg-red-700 transition-colors"
                            >
                                Hi·∫øn m√°u ngay
                            </button>
                        </div>

                        <div className="grid grid-cols-3 gap-4 mt-4">
                            {urgentBloodTypes.map((blood, index) => (
                                <div key={index} className="bg-white p-3 rounded border">
                                    <div className="flex items-center">
                                        <div className={`w-3 h-3 rounded-full ${blood.color} mr-2`}></div>
                                        <div>
                                            <div className="font-semibold">{blood.type}</div>
                                            <div className="text-sm text-gray-600">{blood.stock}</div>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </WrapperSection>

            {/* How It Works */}
            <WrapperSection className="py-16 bg-white">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <GroupedHeading
                        title="Quy tr√¨nh hi·∫øn m√°u"
                        description="3 b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ tr·ªü th√†nh ng∆∞·ªùi hi·∫øn m√°u"
                    />

                    <ThreeStepProcess steps={processSteps} />
                </div>
            </WrapperSection>

            {/*/!* Blood Stock Search *!/*/}
            {/*<WrapperSection className="py-16 bg-gray-100">*/}
            {/*    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">*/}
            {/*        <GroupedHeading*/}
            {/*            title="T√¨m ki·∫øm t√¨nh tr·∫°ng m√°u"*/}
            {/*            description="Ki·ªÉm tra t·ªìn kho m√°u t·∫°i c√°c b·ªánh vi·ªán"*/}
            {/*        />*/}

            {/*        <SearchBloodStock />*/}
            {/*    </div>*/}
            {/*</WrapperSection>*/}

            {/* Call to Action Section */}
            <WrapperSection className="py-16 bg-gradient-to-r from-red-600 to-pink-600">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <TwoCta
                        title="B·∫°n c·∫ßn m√°u hay mu·ªën hi·∫øn m√°u?"
                        subtitle="Ch√∫ng t√¥i k·∫øt n·ªëi nh·ªØng ng∆∞·ªùi c·∫ßn m√°u v·ªõi nh·ªØng ng∆∞·ªùi s·∫µn s√†ng hi·∫øn m√°u"
                        primaryText="T√¥i mu·ªën hi·∫øn m√°u"
                        secondaryText="T√¥i c·∫ßn m√°u"
                        onPrimaryClick={handlePrimaryAction}
                        onSecondaryClick={handleNeedBlood}
                        theme="dark"
                    />
                </div>
            </WrapperSection>

            {/* Blood Types Information */}
            <WrapperSection className="py-16 bg-white">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <GroupedHeading
                        title="Th√¥ng tin nh√≥m m√°u"
                        description="T√¨m hi·ªÉu v·ªÅ c√°c nh√≥m m√°u v√† t√≠nh t∆∞∆°ng th√≠ch"
                    />

                    <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mt-12">
                        {['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'].map((bloodType) => (
                            <div key={bloodType} className="bg-gray-50 p-6 rounded-lg text-center hover:shadow-md transition-shadow">
                                <div className="text-2xl font-bold text-red-600 mb-2">{bloodType}</div>
                                <div className="text-sm text-gray-600">Nh√≥m m√°u {bloodType}</div>
                                <button
                                    onClick={() => navigate(`/blood-types?type=${bloodType}`)}
                                    className="mt-3 text-blue-600 hover:text-blue-800 text-sm font-medium"
                                >
                                    Xem chi ti·∫øt ‚Üí
                                </button>
                            </div>
                        ))}
                    </div>

                    <div className="text-center mt-8">
                        <button
                            onClick={() => navigate('/blood-types')}
                            className="bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors"
                        >
                            Xem t·∫•t c·∫£ th√¥ng tin nh√≥m m√°u
                        </button>
                    </div>
                </div>
            </WrapperSection>

            {/* Recent Blog Posts */}
            <WrapperSection className="py-16 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <GroupedHeading
                        title="Tin t·ª©c & Ki·∫øn th·ª©c"
                        description="C·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ hi·∫øn m√°u"
                    />

                    <div className="grid md:grid-cols-3 gap-8 mt-12">
                        {[
                            {
                                title: "5 ƒêi·ªÅu C·∫ßn Bi·∫øt Tr∆∞·ªõc Khi Hi·∫øn M√°u L·∫ßn ƒê·∫ßu",
                                excerpt: "H∆∞·ªõng d·∫´n chi ti·∫øt cho ng∆∞·ªùi hi·∫øn m√°u l·∫ßn ƒë·∫ßu...",
                                date: "25/05/2024",
                                category: "H∆∞·ªõng d·∫´n"
                            },
                            {
                                title: "T·∫ßm Quan Tr·ªçng C·ªßa M√°u Hi·∫øm Trong Y T·∫ø",
                                excerpt: "T√¨m hi·ªÉu v·ªÅ c√°c nh√≥m m√°u hi·∫øm v√† vai tr√≤ c·ªßa ch√∫ng...",
                                date: "22/05/2024",
                                category: "Y h·ªçc"
                            },
                            {
                                title: "L·ªãch S·ª± Ki·ªán Hi·∫øn M√°u Th√°ng 6",
                                excerpt: "Danh s√°ch c√°c ƒëi·ªÉm hi·∫øn m√°u l∆∞u ƒë·ªông trong th√°ng...",
                                date: "20/05/2024",
                                category: "S·ª± ki·ªán"
                            }
                        ].map((blog, index) => (
                            <article key={index} className="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                <div className="h-48 bg-gray-200"></div>
                                <div className="p-6">
                                    <div className="text-sm text-blue-600 font-medium mb-2">{blog.category}</div>
                                    <h3 className="text-lg font-semibold mb-2 line-clamp-2">{blog.title}</h3>
                                    <p className="text-gray-600 text-sm mb-4 line-clamp-2">{blog.excerpt}</p>
                                    <div className="flex justify-between items-center text-sm text-gray-500">
                                        <span>{blog.date}</span>
                                        <button
                                            onClick={() => navigate('/blogs')}
                                            className="text-blue-600 hover:text-blue-800 font-medium"
                                        >
                                            ƒê·ªçc th√™m ‚Üí
                                        </button>
                                    </div>
                                </div>
                            </article>
                        ))}
                    </div>

                    <div className="text-center mt-8">
                        <button
                            onClick={() => navigate('/blogs')}
                            className="bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors"
                        >
                            Xem t·∫•t c·∫£ b√†i vi·∫øt
                        </button>
                    </div>
                </div>
            </WrapperSection>

            {/* Contact Section */}
            <ContactDetails />

        </div>
    );
};

export default Home;